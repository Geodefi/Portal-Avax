{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x7c75fca6b89475009bfe9e7e17c1bfbad13a67eb276f33a45161b0e4d19e9056",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xc026b2a8f98f40b39c4ce548f423179a8f0ef1979265c2ba66d56a972d7a6f8b",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0xe7f12155c208e850d462f12b1a61093f120d96b1dde7785167a78fa561b940ab",
      "kind": "transparent"
    },
    {
      "address": "0x6397866132887b206EEA19f910730443E71a8CfB",
      "txHash": "0x1fc7e3e5bb658ac6faedbe40ca9021caeb3605eba29bd9c6f448d1728e4f3971",
      "kind": "uups"
    },
    {
      "address": "0x0037272a7048132b10Dd8970AC964Bab2fDB3F62",
      "txHash": "0xe4816470fc06369598e75488ff51f048fba4711fee3a3e2c893ab916ce031455",
      "kind": "uups"
    },
    {
      "address": "0x24F2D7c50357C7B1156Ca85945D3A901c88651cB",
      "txHash": "0xcec419ad951dc871e82351f0f87eba308b72a33285df08463a4e29e8c1d6e49b",
      "kind": "uups"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x50db7363803929e421e11e5e10c8f0885f881941c6cf45dd5401d401b45a4b8d",
      "kind": "uups"
    },
    {
      "address": "0x743F3Ae880D7357690b5ff6C5f16110d9294F352",
      "txHash": "0x3d408d25621893c13ec48609cbd96f1dd98341e37023596a6b57173880c22f99",
      "kind": "uups"
    },
    {
      "address": "0x570ADc5880D778aE5935f199aa590091586CDf75",
      "txHash": "0x23b022e276979f5a396b83db5e64e05567a42d89af4ed597260d5278df5ebcb5",
      "kind": "uups"
    },
    {
      "address": "0x8B8776BEDB1eD89Ab6BD2388bCbef3C579ca53b9",
      "txHash": "0xcc420e2c872567732db5259f5059e4f12f5596ffd5b50e17e96788b49fc27412",
      "kind": "uups"
    },
    {
      "address": "0x8D7a45413AC4115d22CC88a87264dEE8002AfBca",
      "txHash": "0x25dad6f95f1c57efaa34be32b8939130cda9ff201f28309474829170a25c4a55",
      "kind": "uups"
    },
    {
      "address": "0x807951d1F003c2161CdA995168383b54127755d5",
      "txHash": "0x3494721a1a2caf0748e4ea619999d0c62da1cf02f14a199d61931c71b6f09664",
      "kind": "uups"
    },
    {
      "address": "0x2276bFcBb371370AA941C27Fe39ACE83141f7497",
      "txHash": "0x499a081e9136994b615da048e7e582f53fdb0e7899c20cf3bda2bc33ea4191e9",
      "kind": "uups"
    },
    {
      "address": "0x0CA1caF038546b20380B2bd88fbcf604D5066628",
      "txHash": "0xe23d6d434a10f89ace8c8edca0672681e4e70d78aa837a3cf5affa8126c54957",
      "kind": "uups"
    },
    {
      "address": "0x5A887c0A3450DcFD7bdA656894Aeba6272BA5bA7",
      "txHash": "0x6ef15971b22c31afc433793293636ddaec16dac7cf90c7790015b1222dbeaede",
      "kind": "uups"
    },
    {
      "address": "0xb84De814F9834d600039a0151E7f0105e1Fcf923",
      "txHash": "0x41a3b2d0c412ce7a07f853fb99bb356415891bf5497aec65d3dd7e1501efcf38",
      "kind": "uups"
    },
    {
      "address": "0xe1647c832E112c532C79bDf3cFD05362b6e8c744",
      "txHash": "0xdbae53885a5c29833529ab88e84005a621ddaa7d15cbea70c2a4ba3442c58672",
      "kind": "uups"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0xf171a1a7c5817c64f10c7207ba4e28d28837404cdaf18d0fae5fe5ae86b0a566",
      "kind": "uups"
    },
    {
      "address": "0x48A32d57C1620c62E03451a885b8f512b822ab2D",
      "txHash": "0x64a38be53e6f2ca6155935f74367c4f26f470ef35359e6ed093df8d6f1de1650",
      "kind": "uups"
    },
    {
      "address": "0x92b0B50FcC44d778484AF7d5ecBEd96390d8B338",
      "txHash": "0xcd5c19e4537556006f1908ded71d0f668719d1b3cbe45ea96dfc460c071ed736",
      "kind": "uups"
    },
    {
      "address": "0xE13C856EAECD5d6dDD9A91f208cEfae0b5112f6D",
      "txHash": "0x4e03f4b6b0fed56bd0b6fa5ef38c57c3364a07f8756199d00490e6af85d0b2eb",
      "kind": "uups"
    },
    {
      "address": "0x4F4F617d1fAF7D1Ac32989C6b1F5CB3a55A8067d",
      "txHash": "0x01184a04cb254a89f7ca7231158b749ce2b5b0de3507bda575502c2ff84f8d71",
      "kind": "uups"
    },
    {
      "address": "0x24dD0AEe8207c24bc2EDF49885074492C9E2dEb6",
      "txHash": "0xf7d62d20c774d0b10118e56867972150f10c7c873859014b0eacd42e6e06dbce",
      "kind": "uups"
    },
    {
      "address": "0x0FC75cA7E10E26E78354109a27Ee7e9b21C56F88",
      "txHash": "0x0ca0d93909364d42bc13ce2c123940ee29bf70054c2b173235c7dbb0829cb15c",
      "kind": "uups"
    },
    {
      "address": "0xa68Dd7E46935d0AfA34dbed26415CDAFdFb4d308",
      "txHash": "0x1aa8b67400be7e1f7c4c0b4e2a8c01a1971e36de4ad4d3c21b7f375f88bfcc5a",
      "kind": "uups"
    },
    {
      "address": "0x362F323A1A5f633B4B60bf684ad66a03c2C68e53",
      "txHash": "0x68661cfad6199ad8ede47afb93566f72d296bbf0a9bd8848d8f349c3c771db4e",
      "kind": "uups"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x02189f97b5cc390e59ea10a0af4a2e1b2b5ff71ac8989efc12f69d1d74adf622",
      "kind": "uups"
    },
    {
      "address": "0x41De6420d77Ae221Ee7133244762ffB1b03DE087",
      "txHash": "0x10ee38077f5a707998e00c5da2fb1f008a00d398e7c72bf3c070ef1280d6baeb",
      "kind": "uups"
    },
    {
      "address": "0xb2F403D68c22a3Eb57fDA198d4A98b810D5d57d0",
      "txHash": "0xf609d3f09bc41de66f196cd5868bb8b8cd43461028d636b55442f664e112ecff",
      "kind": "uups"
    },
    {
      "address": "0xC53c7F09adfF139088D84558C263ecaB72b95AA4",
      "txHash": "0x073454e0cf1d4c9095a9353d48873c7c11944d20aa5de92459ec61e8f624a25e",
      "kind": "uups"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x70fd6400af075b4aa8470f35870b0991803334bdce515b179dc95faa5085503e",
      "kind": "uups"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x4ccf0ec0ae34cc02f7a70e8fbf9ae79da2cbef3f8fb1c7842294ed33b0ea1aea",
      "kind": "uups"
    },
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0x39ebe929aafaa0b45aa2d9616a9c33103f6ea580745ed95b2deeaee69fdf2bf5",
      "kind": "uups"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x820d271885c8cc38ca67138075eddff261f96384409640f2b6028370b9a1f796",
      "kind": "uups"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xae0fc776a0d3e5c9ab4f102087c326aa51fb76905e0af8415daf4c5f7a2caf55",
      "kind": "uups"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x8bdecc6d56ebaff994c271604ceacb87691f604b9ec7f9fce1e5ace6891aec0e",
      "kind": "uups"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0xd1314619d09c5da598653ccea69b533bc0a9ece22d1e010c6ab2029a2bc4113c",
      "kind": "uups"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x62e40162a671a3aec3f483f1ba06f7ff17dcf0dbdc8ce9db01666ca650ea941c",
      "kind": "uups"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xf45c09da6ec84cbe14eae3c2248fa00e35a28bd80365354bfbd13e1fdf5361eb",
      "kind": "uups"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x7f6e37767827dc7099192934e1924bf2751aac9377ec32593bfb42463fb5335e",
      "kind": "uups"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x8ccf752b7c50e9de6badcea3e9a1064625848eed347d796a526bd6b9f722df17",
      "kind": "uups"
    }
  ],
  "impls": {
    "591a644ea3ec43b8fb4b146a90c2e3cfb9ed8c6480ba7bb95f7e70c6eaa55c38": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x4bfb5c3b88c9106294e9de8c69e976890a3823859b21f0b2ce3cd8034f81f90a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)11459_storage",
            "src": "contracts/Portal/Portal.sol:89"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11666_storage",
            "src": "contracts/Portal/Portal.sol:90"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)12438_storage",
            "src": "contracts/Portal/Portal.sol:92"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:96"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:97"
          },
          {
            "contract": "Portal",
            "label": "MAX_PLANET_FEE",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:103"
          },
          {
            "contract": "Portal",
            "label": "MAX_OPERATOR_FEE",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:103"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/Portal/Portal.sol:1111"
          }
        ],
        "types": {
          "t_struct(DataStore)11459_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11666_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "approvedProxyAdmin",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11638_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11638_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11638_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)12438_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "SLIPPAGE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "67108ecd5da92b745467faec989df4b53c1b9654150bc5a1cf93dde78266bc8a": {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x4ee86eea9c0f24a87f93829fa982cb7cfdc5da8e459b64f875e6f0289c1c11b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)11459_storage",
            "src": "contracts/Portal/Portal.sol:89"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11666_storage",
            "src": "contracts/Portal/Portal.sol:90"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)12438_storage",
            "src": "contracts/Portal/Portal.sol:92"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:96"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:97"
          },
          {
            "contract": "Portal",
            "label": "MAX_PLANET_FEE",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:103"
          },
          {
            "contract": "Portal",
            "label": "MAX_OPERATOR_FEE",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:103"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/Portal/Portal.sol:1111"
          }
        ],
        "types": {
          "t_struct(DataStore)11459_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11666_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "approvedProxyAdmin",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11638_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11638_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11638_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)12438_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "SLIPPAGE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "44a6d4c4b28cab8b91c37007042968f509d2d3c2b94aea3bffe7c1c36facbf49": {
      "address": "0x79613D7834Ad35EE8dC3F9298030eaADc2A8c250",
      "txHash": "0xef1e4695ce49bda63097173c7b37880973a4f68933589e371277867fa8b5347b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10728_storage",
            "src": "contracts/Portal/Portal.sol:83"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10933_storage",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11679_storage",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:91"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:94"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/Portal/Portal.sol:910"
          },
          {
            "contract": "PortalV2",
            "label": "newParam",
            "type": "t_uint256",
            "src": "contracts/Portal/helpers/test/TestUpgradePortal.sol:9"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DataStore)10728_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10933_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10907_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10907_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10907_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11679_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bcb61b99ae3f22493421d3d0653967daf2af590df3173b3e07a4aaec736543ae": {
      "address": "0x0037272a7048132b10Dd8970AC964Bab2fDB3F62",
      "txHash": "0xa22b95a3efded7ae50907dce0d51c92be29362e012cf9c3d0817391aa9766f81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10795_storage",
            "src": "contracts/Portal/Portal.sol:84"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11000_storage",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11746_storage",
            "src": "contracts/Portal/Portal.sol:88"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:92"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:95"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/Portal/Portal.sol:919"
          }
        ],
        "types": {
          "t_struct(DataStore)10795_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11000_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10974_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10974_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10974_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11746_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "77f6b72f2a97c6660dcb256d6ed0510e6e9e7ac11d4116dfc83805c0c4981b45": {
      "address": "0xE8E9B139c6477D4EaD599bE5f2bB9335533D14f7",
      "txHash": "0xcf9003ae51caeddc833bc7c8e9680f6cbbb0c53ea5ec99d71cb3766ea9c444f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10780_storage",
            "src": "contracts/Portal/Portal.sol:83"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10985_storage",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11731_storage",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:91"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:94"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:912"
          }
        ],
        "types": {
          "t_struct(DataStore)10780_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10985_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10959_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10959_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10959_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11731_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "45f8829fafd4e957c55de52448abb7ff4aa6d17a69ca596cbad7bab3db7d053c": {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xee63dae395d786f2a7ce7ed4d4b9d1095503704a5f37d3df7a017c1c3331944b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10788_storage",
            "src": "contracts/Portal/Portal.sol:83"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10993_storage",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11739_storage",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:91"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:94"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:902"
          }
        ],
        "types": {
          "t_struct(DataStore)10788_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10993_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10967_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10967_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10967_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11739_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "3ad57e546747e35a96319713f64043ee46f3c0a259214c2aab034b83f98559ad": {
      "address": "0x6f3203B069cfb6e408ddFa6040d3FD1f26C22F48",
      "txHash": "0xc562176e140b00553cc0bea2ca27273eaee3cc7ce2891382324f2597e585d520",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10788_storage",
            "src": "contracts/Portal/Portal.sol:83"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10993_storage",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11739_storage",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:91"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:94"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:902"
          }
        ],
        "types": {
          "t_struct(DataStore)10788_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10993_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10967_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10967_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10967_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11739_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2110f58abbb69b444cedaa7cf713872a6401337fb8858f8cdf66da836eecfac9": {
      "address": "0x743F3Ae880D7357690b5ff6C5f16110d9294F352",
      "txHash": "0x92eea12269a736c390257d279d6b25829c84f1cc54b75c08e66c33b6887c7fdd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10584_storage",
            "src": "contracts/Portal/Portal.sol:74"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10833_storage",
            "src": "contracts/Portal/Portal.sol:77"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11664_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:82"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:873"
          }
        ],
        "types": {
          "t_struct(DataStore)10584_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10833_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10807_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10807_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10807_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11664_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "910a29c94108a0e7a3960533eef6028f3da3bd3df894009680ccc68f0e533fe4": {
      "address": "0xB4Fa6B8c7093631D97b1fDa568f6c2f36F02cc70",
      "txHash": "0x25652e61a475b621764e649092f9717982fd339df3562d569cea19311276cc23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10599_storage",
            "src": "contracts/Portal/Portal.sol:74"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10848_storage",
            "src": "contracts/Portal/Portal.sol:77"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11679_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:82"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:873"
          }
        ],
        "types": {
          "t_struct(DataStore)10599_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10848_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10822_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10822_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10822_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11679_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "cd04e3da52d91d2d651cc5227da0046f0ec7b5d9af87398ad141cbca98e54f7d": {
      "address": "0x4D5D3FaE9b08a4FA2aEB9Bc0d86E3dB3b3126438",
      "txHash": "0x5384c7fa6b7305498036d36307a0945497742679b0801e04abe79805549a57a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10766_storage",
            "src": "contracts/Portal/Portal.sol:75"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11015_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11846_storage",
            "src": "contracts/Portal/Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:83"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:875"
          }
        ],
        "types": {
          "t_struct(DataStore)10766_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11015_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10989_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10989_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10989_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11846_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "DAILY_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c5d79689797a569a1a144b7df141158db9a8681a6d6fc3a4a260700c33d756b6": {
      "address": "0xB4f34879C2c3db50934E5069CE01fD5EcE3Aa051",
      "txHash": "0x0ca6c38f2eca47522f85bc0a95d64c856d10284f0b8d71371295083267fc7b6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10769_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11018_storage",
            "src": "contracts/Portal/Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11849_storage",
            "src": "contracts/Portal/Portal.sol:82"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:881"
          }
        ],
        "types": {
          "t_struct(DataStore)10769_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11018_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10992_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10992_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10992_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11849_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "cee3413ca159a3e8c2a44e597a4f6b031fd49fc005ce72428db5d55bf96217fc": {
      "address": "0x8FbA866bb0Cf8f07F69d56440a9CCEeb62643787",
      "txHash": "0x557b51560669545c4b1d3a162a5194e1ec35123b8ddad8b77eb5bee59249f867",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10769_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11018_storage",
            "src": "contracts/Portal/Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11849_storage",
            "src": "contracts/Portal/Portal.sol:82"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:881"
          }
        ],
        "types": {
          "t_struct(DataStore)10769_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11018_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10992_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10992_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10992_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11849_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "61a924ddc6b2287489e429517b43c577cf183f76c5624fce3c1b15001da46877": {
      "address": "0xbA14d3281AE3A788d8a1862389756D4246B9B657",
      "txHash": "0xc9235526709e5f62dc56f735bc79ff77521d21154a72ea6ab209705211b027cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10855_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11104_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11935_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:905"
          }
        ],
        "types": {
          "t_struct(DataStore)10855_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11104_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11078_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11078_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11078_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11935_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ae386ce99a549a96a5f86d1f879c8d6fdc6b0019a7c9e7d8e1c39cc1d0a4b806": {
      "address": "0xBdCBb2109Bc54639db2F6269cab7f36f38BD7246",
      "txHash": "0x8638a5646abf9455fa6a14e507ddf7c014e68cef3ec86a81cb493ef7e359239a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10855_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11104_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11935_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:905"
          }
        ],
        "types": {
          "t_struct(DataStore)10855_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11104_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11078_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11078_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11078_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11935_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ead9e58b61daf43370eba084292ff267b9f75dc61bb82fe1b6fb3030caad94ba": {
      "address": "0xb434b5B2bE50013EC7Ed861E04881CFd64029Cbd",
      "txHash": "0x60e05a76765c929a9258604f6d35b3738dd348d39982a1b7c488a31efbc5cc2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10855_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11104_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11935_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:905"
          }
        ],
        "types": {
          "t_struct(DataStore)10855_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11104_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11078_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11078_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11078_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11935_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "47741c0341b38b0426d52de5d0e13352f0a63c498c384fa6cb31d83ee4c23d77": {
      "address": "0x3c6C1F06DAa57A26287d7760a068DeB1e248eFbA",
      "txHash": "0xc8f33b269087445a18d852929947e7bea5c9d0fcf551d5ef8fc0e0aebf16c040",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10855_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11104_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11935_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:905"
          }
        ],
        "types": {
          "t_struct(DataStore)10855_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11104_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11078_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11078_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11078_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11935_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9da51a5a6cdafbf48f8b7c5dcc79cefe324674ada8551bbff4eaae432eca6148": {
      "address": "0x4F4F617d1fAF7D1Ac32989C6b1F5CB3a55A8067d",
      "txHash": "0x0593ed5abeb5b2e3fc6826383453af796f739e921bae956b1ada7afee0762517",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10856_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11105_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11936_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:907"
          }
        ],
        "types": {
          "t_struct(DataStore)10856_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11105_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11079_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11079_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11079_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11936_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6df1232b95fbd90a1954203ca976d95b73ee8242773576ea58b5dd14c8a92edf": {
      "address": "0x362F323A1A5f633B4B60bf684ad66a03c2C68e53",
      "txHash": "0x0fc1ae981e0ab3189992b05d6dede97b88cd664c7d0523e66f9b02cd38d0c944",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10818_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11067_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11898_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:893"
          }
        ],
        "types": {
          "t_struct(DataStore)10818_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11067_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11041_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11041_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11041_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11898_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "cf921347af2da20fcfb7e533ff33ade1729edb73da6f182c1637fbde50528fc4": {
      "address": "0x6439865dd9a69a9bC078E28e487E22A88CfbB84a",
      "txHash": "0x4eed621578f34d17ad18eca4958ad70e65e8c224690e345bc47046791c9381e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10768_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11017_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11848_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:893"
          }
        ],
        "types": {
          "t_struct(DataStore)10768_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11017_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10991_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10991_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10991_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11848_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bd232c11ffce1ec32dced182842cda88fa5f316769b16ea1f145299bb3ee41f9": {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x07bee1a860ffb22e65913041e491486ecad1066491770af5ac72a2b501567e81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10818_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11067_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11898_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:893"
          }
        ],
        "types": {
          "t_struct(DataStore)10818_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11067_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11041_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11041_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11041_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11898_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be0278f25fb41e5cdb4960e5732771d32469a48ffced22bfc6344e995184c300": {
      "address": "0x1EF911Ee6e42dD01DeA4fb18f7dD0cD08F385C49",
      "txHash": "0xb271221694e2c15fb41dbc33481e146c3982754b503d4ab037d404bbec2b377d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10799_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11048_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11879_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:893"
          }
        ],
        "types": {
          "t_struct(DataStore)10799_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11048_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11022_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11022_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11022_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11879_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f77e61ede8e7d324828e07b979c37033f3c77911479075e04aa08e5163f25f91": {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x94733a6003dd2178a66980c19a4f54675b840faabd49b96cab43bc20cb6dfc85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10799_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11048_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11879_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:885"
          }
        ],
        "types": {
          "t_struct(DataStore)10799_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11048_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11022_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11022_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11022_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11879_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "fe76530a36d558a9d45a5a96dadf8c267852e4f3b3e78b7dbfb3a68c279be4e4": {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0x2fe31e330d6a369af5f28f5d17c379b88d6e05462ff933605ea9dbb948585260",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10799_storage",
            "src": "contracts/Portal/Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11048_storage",
            "src": "contracts/Portal/Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11879_storage",
            "src": "contracts/Portal/Portal.sol:82"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts/Portal/Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts/Portal/Portal.sol:87"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/Portal/Portal.sol:885"
          }
        ],
        "types": {
          "t_struct(DataStore)10799_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11048_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11022_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11022_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11022_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11879_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ade3b2803273b9f7fd0f390a3b2a09391e740f10fc17ca4763145d9940fd699f": {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x6fd10b090a77a182cc10d6e98bcaf2f3097a990d3d31d95566390bbea3783381",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10799_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11048_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11879_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:885"
          }
        ],
        "types": {
          "t_struct(DataStore)10799_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11048_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11022_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11022_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11022_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11879_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0ca8ce902ab96881465ea4d84ee40de2c24a0a7390489de135edaf4815b55bfb": {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0xb750459a5f4487237e2dfaffefb5d52ff421ba2f11ecec50ccaaa06e34dc76da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10810_storage",
            "src": "contracts\\Portal\\Portal.sol:78"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)11059_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11892_storage",
            "src": "contracts\\Portal\\Portal.sol:79"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:85"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:86"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:887"
          }
        ],
        "types": {
          "t_struct(DataStore)10810_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)11059_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)11033_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)11033_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)11033_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11892_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1e47a7fcee954656322d5a1c218debdf5d27f866151ee8009fe3047fa294f769": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xa744db427006a4b80f045d2790b067a0965af54b5bfb026febe1c560479e9dc2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "Portal",
            "label": "DATASTORE",
            "type": "t_struct(DataStore)10592_storage",
            "src": "contracts\\Portal\\Portal.sol:117"
          },
          {
            "contract": "Portal",
            "label": "GEODE",
            "type": "t_struct(Universe)10841_storage",
            "src": "contracts\\Portal\\Portal.sol:118"
          },
          {
            "contract": "Portal",
            "label": "STAKEPOOL",
            "type": "t_struct(StakePool)11674_storage",
            "src": "contracts\\Portal\\Portal.sol:118"
          },
          {
            "contract": "Portal",
            "label": "DEFAULT_INTERFACE",
            "type": "t_address",
            "src": "contracts\\Portal\\Portal.sol:124"
          },
          {
            "contract": "Portal",
            "label": "CONTRACT_VERSION",
            "type": "t_uint256",
            "src": "contracts\\Portal\\Portal.sol:125"
          },
          {
            "contract": "Portal",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Portal\\Portal.sol:943"
          }
        ],
        "types": {
          "t_struct(DataStore)10592_storage": {
            "label": "struct DataStoreUtils.DataStore",
            "members": [
              {
                "label": "allIdsByType",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
              },
              {
                "label": "uintData",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "bytesData",
                "type": "t_mapping(t_bytes32,t_bytes_storage)"
              },
              {
                "label": "addressData",
                "type": "t_mapping(t_bytes32,t_address)"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Universe)10841_storage": {
            "label": "struct GeodeUtils.Universe",
            "members": [
              {
                "label": "SENATE",
                "type": "t_address"
              },
              {
                "label": "GOVERNANCE",
                "type": "t_address"
              },
              {
                "label": "OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "MAX_OPERATION_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "SENATE_EXPIRE_TIMESTAMP",
                "type": "t_uint256"
              },
              {
                "label": "approvedUpgrade",
                "type": "t_address"
              },
              {
                "label": "_electorCount",
                "type": "t_uint256"
              },
              {
                "label": "_electorTypes",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "_proposalForId",
                "type": "t_mapping(t_uint256,t_struct(Proposal)10815_storage)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10815_storage)": {
            "label": "mapping(uint256 => struct GeodeUtils.Proposal)"
          },
          "t_struct(Proposal)10815_storage": {
            "label": "struct GeodeUtils.Proposal",
            "members": [
              {
                "label": "CONTROLLER",
                "type": "t_address"
              },
              {
                "label": "TYPE",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(StakePool)11674_storage": {
            "label": "struct StakeUtils.StakePool",
            "members": [
              {
                "label": "gAVAX",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_SWAP_POOL",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_LP_TOKEN",
                "type": "t_address"
              },
              {
                "label": "ORACLE",
                "type": "t_address"
              },
              {
                "label": "DEFAULT_A",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_FEE",
                "type": "t_uint256"
              },
              {
                "label": "DEFAULT_ADMIN_FEE",
                "type": "t_uint256"
              },
              {
                "label": "FEE_DENOMINATOR",
                "type": "t_uint256"
              },
              {
                "label": "PERIOD_PRICE_INCREASE_LIMIT",
                "type": "t_uint256"
              },
              {
                "label": "MAX_MAINTAINER_FEE",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
